# Auto-generated file. Do not edit manually!
#
# To alter these flows, edit:
#
#     internal/venice-test-common/build.gradle
#
# To regenerate, run:
#
#     ./gradlew generateGHCI

name: E2ETests

on: [push, pull_request, workflow_dispatch]

jobs:
  IntegrationTests_1450:
    name: IntegrationTests_1450
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_1450
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_1450
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  IntegrationTests_1451:
    name: IntegrationTests_1451
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_1451
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_1451
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  IntegrationTests_1452:
    name: IntegrationTests_1452
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_1452
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_1452
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  IntegrationTests_1453:
    name: IntegrationTests_1453
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_1453
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_1453
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  IntegrationTests_1454:
    name: IntegrationTests_1454
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_1454
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_1454
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  IntegrationTests_1455:
    name: IntegrationTests_1455
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_1455
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_1455
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  IntegrationTests_1500:
    name: IntegrationTests_1500
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_1500
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_1500
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  IntegrationTests_1550:
    name: IntegrationTests_1550
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_1550
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_1550
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  IntegrationTests_9999:
    name: IntegrationTests_9999
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
     pull-requests: write
     issues: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_9999
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: never
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_9999
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.job }} Test Reports       # Name where it report the test results
          path: '**/TEST-*.xml'
          fail-on-error: 'false'
          max-annotations: '10'
          list-tests: 'all'
          list-suites: 'all'
          reporter: java-junit
      - name: Publish Test Report
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          check_name: ${{ github.job }}-jdk${{ matrix.jdk }} Report
          comment: false
          annotate_only: true
          flaky_summary: true
          commit: ${{github.event.workflow_run.head_sha}}
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30
      - name: Upload test results to BuildPulse for flaky test detection
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !cancelled()
        uses: buildpulse/buildpulse-action@main
        with:
          account: 100582612927
          repository: 100441445875
          path: |
            **/TEST-*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  E2ETestsCompletion:
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    needs: [IntegrationTests_1450, IntegrationTests_1451, IntegrationTests_1452, IntegrationTests_1453, IntegrationTests_1454, IntegrationTests_1455, IntegrationTests_1500, IntegrationTests_1550, IntegrationTests_9999]
    timeout-minutes: 20
    steps:
    - name: NoOp
      shell: bash
      run: |
        echo "Successfully ran all E2E tests!"


